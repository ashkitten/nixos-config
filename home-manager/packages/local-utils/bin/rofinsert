#! /usr/bin/env zsh

# $1 = rofi extra args, $2 = arguments
function __rofiwrap {
    # Save current window focus
    current_window=$(xdotool getwindowfocus)

    rofi -dmenu $@
    ret=$?

    # Restore focus to current window
    xdotool windowfocus $current_window

    return $ret
}

# $1 = file to insert
function __insert {
    function type_arg {
        type="$(file -b --mime-type $1)"
        if [[ $type != "text/plain" ]]; then
            printf '-t %s' $type
        else
            printf '-r'
        fi
    }

    clip=($1 $(type_arg $1))

    # Anonymous function for handling clipboards
    function {
        # Save the contents of the clipboards to the anonymous files
        xclip -selection primary -o > $1
        xclip -selection clipboard -o > $2

        # Copy expansion to clipboards
        xclip -selection primary -i $clip
        xclip -selection clipboard -i $clip

        # Paste clipboard
        xdotool key --clearmodifiers Shift+Insert

        # Restore clipboards from variables
        xclip -selection primary -i $1 $(type_arg $1)
        xclip -selection clipboard -i $2 $(type_arg $2)

    # Call anonymous function with file handles for the contents of the clipboards
    } =() =()
}

# $1 = file to copy
function __copy {
    function type_arg {
        type="$(file -b --mime-type $1)"
        if [[ $type != "text/plain" ]]; then
            printf '-t %s' $type
        else
            printf '-r'
        fi
    }

    clip=($1 $(type_arg $1))

    xclip -selection primary -i $clip
    xclip -selection clipboard -i $clip
}

function emoji {
    EMOJI_FILE="$HOME/.local/share/emoji.txt"
    [[ -f $EMOJI_FILE ]] || scrape_emoji > $EMOJI_FILE
    emoji=($(__rofiwrap -p emoji -i -kb-custom-1 Ctrl+c < $EMOJI_FILE))
    ret=$?
    if [[ $ret -eq 0 ]]; then
        __insert =(<<<${emoji[1]})
    elif [[ $ret -eq 10 ]]; then
        __copy =(<<<${emoji[1]})
    fi
}

function expand {
    # Expansions directory constant
    EXPANSIONS_DIR="$HOME/.local/share/expansions"
    # Get list of expansions
    [[ -d $EXPANSIONS_DIR ]] || exit 1
    expansion="$EXPANSIONS_DIR/$(ls -1 $EXPANSIONS_DIR | __rofiwrap -p expand)"
    ret=$?
    if [[ $ret -eq 0 ]]; then
        __insert $expansion
    elif [[ $ret -eq 10 ]]; then
        __copy $expansion
    fi
}

function password {
    # Get list of passwords
    prefix=${PASSWORD_STORE_DIR-"$HOME/.password-store"}
    password_files=($prefix/**/*.gpg)
    password_files=(${password_files[@]#$prefix/})
    password_files=(${password_files[@]%.gpg})
    password_file=$(printf '%s\n' ${password_files[@]} | __rofiwrap -p password -i -kb-custom-1 Ctrl+c)
    ret=$?
    if [[ $ret -eq 0 ]]; then
        __insert =(pass show $password_file | awk 'NR==1 {print $1}')
    elif [[ $ret -eq 10 ]]; then
        __copy =(pass show $password_file | awk 'NR==1 {print $1}')
    fi
}

$(printf '%s\n' emoji expand password | __rofiwrap -p insert)
